@page "/Login"
@layout AuthLayout
@inject NavigationManager NM
@inject UserService UserService
@inject AuthServices AuthServices

<div class="container my-5">
    <div class="row">
        <!-- Image column - visible on medium and larger screens -->
        <div class="col-md-6 d-none d-md-block">
            <img class="img-fluid login-image" src="/login-image.jpg" />
        </div>
        <div class="col-md-6 col-sm-12">
            <div class="container-fluid py-5 my-5 login-container shadow">
                <h2 class="text-center mb-4 Dancing">Login to continue</h2>

                <EditForm Model="_user" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group">
                        <label for="Email" class="font-monospace">Email</label>
                        <InputText id="Email" class="form-control" @bind-Value="_user.Email" />
                    </div>

                    <div class="form-group">
                        <label for="Password" class="font-monospace">Password</label>
                        <InputText id="Password" type="password" class="form-control" @bind-Value="_user.password" />
                    </div>

                    <!-- Center-aligned button -->
                    <div class="form-group text-center">
                        <button type="submit" class="btn btn-primary">Login</button>
                        <button type="button" class="btn btn-primary" @onclick="HandleRegister">Register</button>
                    </div>

                    @if (_showerror)
                    {
                        <div class="alert alert-danger" role="alert">
                            Invalid Email or Password
                        </div>
                    }
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private User _user = new User();
    private bool _showerror = false;

    private void HandleRegister()
    {
        NM.NavigateTo("/Register");
    }

    private void HandleValidSubmit()
    {
        var verified = AuthServices.VerifyUser(_user.Email, _user.password);
        if (verified)
        {
            string username = UserService.GetUsernameByEmail(_user.Email);
            NM.NavigateTo($"/Home/{username}");
        }
        else
        {
            verified = AuthServices.VerifyAdmin(_user.Email, _user.password);
            if (verified)
            {
                NM.NavigateTo($"/admin/dashboard/{_user.Email}");
            }
            else
            {
                _showerror = true;
            }
        }
    }
}
