@page "/profile/edit-user/{username}"
@inject UserService UserService
@layout ProfileLayout

<NavMenu username="@username"></NavMenu>

<div class="container mt-5">
    <h1 class="text-center mb-4">Edit User Details</h1>

    <EditForm Model="_user" OnValidSubmit="HandleValidSubmit">
        <div class="form-group">
            <label for="Name" class="font-monospace">Name</label>
            <InputText @bind-Value="_user.Name" id="Name" class="form-control" />
        </div>

        <div class="form-group">
            <label for="Username" class="font-monospace">Username</label>
            <InputText @bind-Value="_user.username" id="Username" class="form-control" />
        </div>

        <div class="form-group">
            <label for="Email" class="font-monospace">Email</label>
            <InputText @bind-Value="_user.Email" id="Email" class="form-control" />
        </div>

        <div class="form-group">
            <label for="Password">Password</label>
            <InputText @bind-Value="_user.password" type="password" id="Password" class="form-control" />
        </div>

        <div class="form-group text-center">
            <button type="submit" class="btn btn-outline-success">Update Details</button>
        </div>
    </EditForm>

    @if (updated != null)
    {
        <div class="alert @((updated == true) ? "alert-success" : "alert-danger")" role="alert">
            @if (updated == true)
            {
                <p>User details updated successfully</p>
           }
            else
            {
                <p>User details not updated; one or more details might already have been taken.</p>
            }
        </div>
    }
</div>

@code {
    [Parameter]
    public string username { get; set; }

    private bool? updated { get; set; } = null;

    private User _user = new User();

    private void HandleValidSubmit()
    {
        updated = UserService.UpdateUser(_user);
    }

    protected override void OnInitialized()
    {
        _user = UserService.GetUserByUsername(username);
    }
}
